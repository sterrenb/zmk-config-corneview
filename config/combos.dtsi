#define COMBO_TERM_DEFAULT 30
#define COMBO_QUICK_TAP_MS 100

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TERM, QUICKTAP) \
  combo_##NAME { \
    timeout-ms = <TERM>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
    require-prior-idle-ms = <QUICKTAP>; \
  };

#define COMBO_BASE(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <COMBO_TERM_DEFAULT>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <BASE>; \
    require-prior-idle-ms = <COMBO_QUICK_TAP_MS>; \
  };

#define COMBO_RAISE(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <COMBO_TERM_DEFAULT>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <RAISE>; \
    require-prior-idle-ms = <COMBO_QUICK_TAP_MS>; \
  };

/ {
    combos {
        compatible = "zmk,combos";

    /*
      KEY POSITIONS
      ╭─────────────────────────╮ ╭────────────────────────╮
      │  0   1   2   3   4   5  │ │  6   7   8   9   10 11 │
      │ 12  13  14  15  16  17  │ │ 18  19  20  21  22  23 │
      │ 24  25  26  27  28  29  │ │ 30  31  32  33  34  35 │
      ╰───────────╮  36  37  38 │ │ 39  40  41 ╭───────────╯
                  ╰─────────────╯ ╰────────────╯
    */

        // Left
        COMBO_BASE(esc, &kp ESC, 0 1)
        
        COMBO_BASE(excl, &kp EXCL, 1 13)
        COMBO_BASE(at, &kp AT, 2 14)
        COMBO_BASE(hash, &kp HASH, 3 15)
        COMBO_BASE(dollar, &kp DOLLAR, 4 16)
        COMBO_BASE(percent, &kp PERCENT, 5 17)
        
        COMBO_BASE(caret, &kp CARET, 13 25)
        COMBO_BASE(ampersand, &kp AMPERSAND, 14 26)
        COMBO_BASE(asterisk, &kp ASTERISK, 15 27)
        COMBO_BASE(left_paren, &kp LPAR, 16 28)
        COMBO_BASE(right_paren, &kp RPAR, 17 29)

        COMBO_BASE(pgup, &kp PG_UP, 12 13)
        COMBO_BASE(pgdn, &kp PG_DN, 24 25)

        COMBO_RAISE(bt_clear, &bt BT_CLR, 0 12)
        COMBO_RAISE(bt_sel_0, &bt BT_SEL 0, 1 13)
        COMBO_RAISE(bt_sel_1, &bt BT_SEL 1, 2 14)
        COMBO_RAISE(bt_sel_2, &bt BT_SEL 2, 3 15)
        COMBO_RAISE(bt_sel_3, &bt BT_SEL 3, 4 16)
        COMBO_RAISE(bt_sel_4, &bt BT_SEL 4, 5 17)

        // Right
        COMBO_BASE(del, &kp DEL, 10 11)
        
        COMBO_BASE(minus, &kp MINUS, 7 19)
        COMBO_BASE(equal, &kp EQUAL, 8 20)
        COMBO_BASE(slash, &kp SLASH, 9 21)
        COMBO_BASE(home, &kp HOME, 6 18)
        COMBO_BASE(end, &kp END, 18 30)
        COMBO_BASE(lbkt, &kp LBKT, 19 31)
        COMBO_BASE(rbkt, &kp RBKT, 20 32)
        COMBO_BASE(backslash, &kp BACKSLASH, 21 33)

        // Both
        COMBO_BASE(capslock, &kp CAPSLOCK, 5 6)
        COMBO_BASE(capsword, &caps_word, 29 30)

        // Media
        COMBO_BASE(media_play_pause, &kp C_PLAY_PAUSE, 22 23)
        COMBO_BASE(media_next, &kp C_NEXT, 34 35)
        COMBO_BASE(volume_up, &kp C_VOL_UP, 11 23)
        COMBO_BASE(volume_dn, &kp C_VOL_DN, 23 35)
    };
};