/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
/ {
    behaviors {
        // Home Row Mods
        // See: https://zmk.dev/docs/keymaps/behaviors/hold-tap?examples=home_row_mods#custom-hold-tap-examples
        hml: hml_balanced {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr_balanced {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
/* Graphite Layout
 * ---------------------------------------------------------------------------------------------------
 * |  TAB |  B  |  L  |  D  |  W  |  Z  | |  '  |  F  |  O  |  U  |  J  | BKSP |
 * | LCTRL| s-N | c-R | a-T | g-S |  G  | |  Y  | g-H | a-A | c-E | s-I |  '   |
 * | LSHFT|  Q  |  X  |  M  |  C  |  V  | |  K  |  P  |  .  |  _  |  /  | ESC  |
 * ---------------------------------------------------------------------------------------------------
 *                        | LGUI | LWR | SPC | | ENT | RSE | RALT |
 */
                        display-name = "Base";
                        bindings = <
   &kp TAB   &kp B      &kp L      &kp D      &kp W      &kp Z        &kp SQT &kp F      &kp O      &kp U      &kp J    &kp BSPC
   &kp LCTRL &hml LSHFT N &hml LCTRL R &hml LALT T &hml LGUI S &kp G   &kp Y   &hmr RGUI H &hmr RALT A &hmr RCTRL E &hmr RSHFT I &kp SQT
   &kp LSHFT &kp Q      &kp X      &kp M      &kp C      &kp V        &kp K   &kp P      &kp DOT    &kp UNDER  &kp FSLH &kp ESC
                   &kp LGUI &mo 1 &kp SPACE  &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
/* Lower Layer
 * ---------------------------------------------------------------------------------------------------
 * |  TAB |  1  |  2  |  3  |  4  |  5  | |  6  |  7  |  8  |  9  |  0  | BKSP |
 * | LCTRL| tran| tran| tran| tran| tran| | LFT | DWN |  UP | RGT | tran| tran |
 * | LSHFT| tran| tran| tran| tran| tran| | tran| tran| tran| tran| tran| tran |
 * ---------------------------------------------------------------------------------------------------
 *                        | LGUI | tran| SPC | | ENT |CONN | RALT |
 */
                        display-name = "Lower";
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &kp LCTRL  &trans       &trans       &trans       &trans       &trans         &trans   &kp LEFT &kp DOWN &kp UP    &kp RIGHT &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &mo 2    &kp RALT
                        >;
                };

                raise_layer {
/* Raise Layer
 * ---------------------------------------------------------------------------------------------------
 * |  TAB |  !  |  @  |  #  |  $  |  %  | |  ^  |  &  |  *  |  (  |  )  | BKSP |
 * | LCTRL| tran| tran| tran| tran| tran| |  -  |  =  |  [  |  ]  |  \  |  `   |
 * | LSHFT| tran| tran| tran| tran| tran| |  _  |  +  |  {  |  }  |  |  |  ~   |
 * ---------------------------------------------------------------------------------------------------
 *                        | LGUI |CONN | SPC | | ENT | tran| RALT |
 */
                        display-name = "Raise";
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                                     &kp LGUI &mo 1        &kp SPACE      &kp RET   &trans   &kp RALT
                        >;
                };

                media_layer {
/* Media & Connectivity Layer
 * ---------------------------------------------------------------------------------------------------
 * |      |     |     |     |     |     | |     | PREV| PLAY| NEXT|     |      |
 * | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 | |     | VOLD| MUTE| VOLU|     |      |
 * |      |     |     |     |     |     | |     |     |     |     |     |      |
 * ---------------------------------------------------------------------------------------------------
 *                        |     |     |     | |     |     |      |
 */
                        display-name = "Media";
                        bindings = <
   &trans     &trans       &trans       &trans       &trans       &trans         &trans   &kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT &trans &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &trans &trans
   &trans     &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans   &trans    &trans &trans
                                        &trans       &trans       &trans         &trans   &trans   &trans
                        >;
                };

        };

    // https://zmk.dev/docs/keymaps/conditional-layers
    conditional_layers {
        compatible = "zmk,conditional-layers";

        media_on_lower_and_raise {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};