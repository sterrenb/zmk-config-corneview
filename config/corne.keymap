/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "./base.dtsi"

/ {
    behaviors {
        // Home Row Mods
        // See: https://zmk.dev/docs/keymaps/behaviors/hold-tap?examples=home_row_mods#custom-hold-tap-examples
        hml: hml_balanced {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr_balanced {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };
        
        lmtd: lower_media_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM_MS>;
            bindings = <&mo 1>, <&tog 3>;
        };
    };

    combos {
        compatible = "zmk,combos";
        esc_combo {
            timeout-ms = <100>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        del_combo {
            timeout-ms = <100>;
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };
        
        colon_combo {
            timeout-ms = <100>;
            key-positions = <6 18>;
            bindings = <&kp SEMICOLON>;
        };
        minus_combo {
            timeout-ms = <100>;
            key-positions = <18 30>;
            bindings = <&kp MINUS>;
        };
        
        volume_up {
            timeout-ms = <100>;
            key-positions = <10 22>;
            bindings = <&kp C_VOL_UP>;
        };
        volume_down {
            timeout-ms = <100>;
            key-positions = <22 34>;
            bindings = <&kp C_VOL_DN>;
        };

    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "Base";
                        bindings = <
   &kp TAB   &kp B        &kp L        &kp D        &kp W        &kp Z          &kp SQT  &kp F        &kp O        &kp U        &kp J        &kp BSPC
   &kp LCTRL &hml LSHFT N &hml LCTRL R &hml LALT T  &hml LGUI S  &kp G          &kp Y    &hmr RGUI H  &hmr RALT A  &hmr RCTRL E &hmr RSHFT I &kp SQT
   &kp LSHFT &kp Q        &kp X        &kp M        &kp C        &kp V          &kp K    &kp P        &kp DOT      &kp UNDER    &kp FSLH     &kp ESC
                                       &kp LGUI     &lmtd        &kp SPACE      &kp RET  &mo 2        &kp RALT
                        >;
                };
                lower_layer {
                        display-name = "Lower";
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7       &kp N8       &kp N9       &kp N0       &kp BSPC
   &kp LCTRL  &trans       &trans       &trans       &trans       &trans         &trans   &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans       &trans       &trans       &trans       &trans
                                        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans       &kp RALT
                        >;
                };

                raise_layer {
                        display-name = "Raise";
                        bindings = <
   &kp TAB    &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT      &kp CARET &kp AMPS      &kp KP_MULTIPLY &kp LPAR     &kp RPAR     &kp BSPC
   &kp LCTRL  &trans       &trans       &trans       &trans       &trans         &kp MINUS &kp EQUAL     &kp LBKT        &kp RBKT     &kp BSLH     &kp GRAVE
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &kp UNDER &kp PLUS      &kp LBRC        &kp RBRC     &kp PIPE     &kp TILDE
                                        &kp LGUI     &trans       &kp SPACE      &kp RET   &trans       &kp RALT
                        >;
                };

                media_layer {
                        display-name = "Media";
                        bindings = <
   &trans     &trans       &trans       &trans       &trans       &trans         &trans   &kp C_PREV   &kp C_PLAY_PAUSE &kp C_NEXT   &trans       &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &kp C_VOL_DN &kp C_MUTE       &kp C_VOL_UP &trans       &trans
   &trans     &trans       &trans       &trans       &trans       &trans         &trans   &trans       &trans           &trans       &trans       &trans
                                        &trans       &trans       &trans         &trans   &trans       &trans
                        >;
                };

        };
};